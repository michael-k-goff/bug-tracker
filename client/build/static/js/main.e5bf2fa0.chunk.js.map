{"version":3,"sources":["react-auth0-spa.js","components/Profile.js","components/Teams.js","components/TeamMembers.js","components/Projects.js","components/Issues.js","components/NavBar.js","components/HomeView.js","components/Dashboard.js","utils/history.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","async","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","fetch","method","headers","body","JSON","stringify","initAuth0","Provider","value","loginWithPopup","params","console","error","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","Profile","src","picture","alt","name","email","TeamList","teams","setTeam","setTeams","is_leader","view","setView","waiting","setWaiting","map","team","key","id","TeamSelector","TeamButton","className","onClick","href","Teams","teamsMembership","setTeamsMembership","lead_ids","parse","x","teams_not_members","filter","indexOf","length","AddTeamMember","updateCount","setUpdateCount","teamMembers","AddMemberToTeamEmail","props","handleChange","bind","handleSubmit","state","memberemail","message","messageStatus","event","this","setState","target","preventDefault","then","response","json","data","express","i","onSubmit","type","defaultValue","onChange","style","Component","AddMemberToTeam","membername","TeamMember","member","MemberRemoveButton","handleClick","TeamMembers","setTeamMembers","my_members","getMembers","members","sort","y","DeleteTeam","TeamDeleteButton","ProjectsManaged","projects","setProject","is_team_leader","projectlead","setProjectlead","ProjectsOther","NewProjectForm","projectname","handleLeadChange","lead_id","lead","res","ProjectList","project","ProjectSelector","ProjectButton","leader","Projects","projectsMembership","setProjects","setProjectsMembership","projects_not_members","DeleteProject","updateCountProject","setUpdateCountProject","ProjectDeleteButton","IssueList","list_name","issues_array","userID","members_by_id","by_owner","filtered_issues","issue","owner","Issue","description","NewIssueForm","issuedesc","handleOwnerChange","owner_id","Issues","issues","setIssues","setUserID","my_issues","getIssues","myID","getUserID","NavBar","isExpanded","setIsExpanded","team_name","project_name","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","data-target","NewTeamForm","teamname","HomeView","Sidebar","rel","Dashboard","my_teams","response_by_membership","my_teams_by_membership","getTeams","my_projects","my_projects_by_membership","getProjects","createBrowserHistory","PrivateRoute","component","path","rest","targetUrl","render","App","post","responseToPost","callApi","status","Error","catch","err","log","Boolean","hostname","match","ReactDOM","domain","config","client_id","clientId","redirect_uri","origin","push","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5bf2fa0.chunk.js","sourcesContent":["// src/react-auth0-spa.js\nimport React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        // Save the new user to the database if not already present.\n        await fetch('https://54.200.109.3:5001/add_user',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify(user)\n        });\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","// src/components/Profile.js\n\nimport React, { Fragment } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst Profile = () => {\n    const { loading, user } = useAuth0();\n\n    if (loading || !user) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <Fragment>\n            <img src={user.picture} alt=\"Profile\" />\n            <p>This is the Profile component</p>\n            <h2>{user.name}</h2>\n            <p>{user.email}</p>\n            <code>{JSON.stringify(user, null, 2)}</code>\n        </Fragment>\n    );\n};\n\nexport default Profile;\n","// src/components/Teams.js\n// Component that displays list of teams\n\nimport React, { Fragment } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst Teams = ({teams, setTeams, teamsMembership, setTeamsMembership, team, setTeam, view, setView, waiting, setWaiting}) => {\n    const { loading, user } = useAuth0();\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (!user || !teams || !teamsMembership) {\n        return <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"# \">\n                <span>Not logged in</span>\n            </a>\n        </li>\n    }\n\n    // Derive teams that one is a member of but not the lead.\n    const lead_ids = JSON.parse(teams) ? JSON.parse(teams).map((x)=>x.id) : [];\n    const teams_not_members = JSON.parse(teamsMembership) ?\n        JSON.parse(teamsMembership).filter((x)=>lead_ids.indexOf(x.id)===-1) :\n        [];\n\n    return (\n        <Fragment>\n            <div className=\"sidebar-heading\">\n                <b>{lead_ids.length ? \"Teams I lead\" : \"Teams I lead (None found)\"}</b>\n            </div>\n\n            {teams.length > 0 &&\n                <TeamList\n                    teams={JSON.parse(teams)}\n                    setTeam={setTeam}\n                    setTeams={setTeams}\n                    user={user}\n                    is_leader={1}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            }\n            <hr className=\"sidebar-divider my-0\" />\n            <div className=\"sidebar-heading\">\n                <b>{teams_not_members.length ? \"Other teams I belong to\" : \"Other teams I belong to (none found)\"}</b>\n            </div>\n            {teams_not_members.length > 0 &&\n                <TeamList\n                    teams={teams_not_members}\n                    setTeam={setTeam}\n                    setTeams={setTeams}\n                    user={user}\n                    is_leader={0}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            }\n        </Fragment>\n    );\n};\n\n// Component to render a list of teams\nconst TeamList = ({teams, setTeam, setTeams, user, is_leader, view, setView, waiting, setWaiting}) => {\n    return (\n        <>\n            {teams.map((team)=> {\n                return <TeamSelector\n                    team={team}\n                    key={team.id}\n                    setTeam={setTeam}\n                    setTeams={setTeams}\n                    user={user}\n                    is_leader={is_leader}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            })}\n        </>\n    )\n}\n\n// Selector, including possible deletion button, for a single team\nconst TeamSelector = ({team, setTeam, setTeams, user, is_leader, view, setView, waiting, setWaiting}) => {\n    return (\n        <div>\n            <TeamButton team={team} setTeam={setTeam} view={view} setView={setView} waiting={waiting} setWaiting={setWaiting}/>\n        </div>\n    )\n}\n\n// Component for an individual team button\n// Not actually a button anymore\nconst TeamButton = ({team, setTeam, view, setView, waiting, setWaiting}) => {\n    const handleClick = () => {\n        if (waiting) {return}\n        setTeam(team.id);\n        setView(\"Team\");\n    }\n    return (\n        <li className=\"nav-item\" onClick={handleClick}>\n            <a className=\"nav-link\" href=\"# \">\n                <span>{team.name}</span>\n            </a>\n        </li>\n    )\n}\n\nexport default Teams;\n","// src/components/TeamMembers.js\n// Component that allows the team leader to manage team members.\n\nimport React, { Fragment, useState, useEffect } from \"react\";\n\nconst TeamMembers = ({team, teams, user, teamMembers, setTeamMembers, waiting, setWaiting}) => {\n    const [updateCount, setUpdateCount] = useState(0);\n\n    useEffect(()=> {\n        async function getMembers() {\n            const response = await fetch('https://54.200.109.3:5001/team_members',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify({\"team\":team})\n            });\n            const my_members = await response.json();\n\n            setTeamMembers(my_members.express);\n        }\n        getMembers();\n    },[user, team, teams, updateCount]);\n\n    // Determine if the user is the leader of the current team\n    let is_leader = 0;\n    for (let i=0; i<JSON.parse(teams).length; i++) {\n        if (JSON.parse(teams)[i].id === team) {\n            is_leader = 1;\n        }\n    }\n\n    let members = JSON.parse(teamMembers).sort((x,y)=>{\n        if (x.email === user.email && y.email !== user.email) {return -1}\n        if (y.email === user.email && x.email !== user.email) {return 1}\n        return (y.id > x.id ? 1 : -1)\n    });\n\n    return (\n        <Fragment>\n            <div className=\"col-xl-6 col-lg-7\">\n                <div className=\"card shadow mb-4\">\n                    <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                        <h6 className=\"m-0 font-weight-bold text-primary\">\n                            Team Members\n                        </h6>\n                    </div>\n                    <div className=\"card-body\">\n                        {members.map((x,i)=>\n                            <Fragment key={x.id}>\n                                <TeamMember\n                                    key={x.id}\n                                    member={x}\n                                    user={user}\n                                    team={team}\n                                    updateCount={updateCount}\n                                    setUpdateCount={setUpdateCount}\n                                    is_leader={is_leader}\n                                    waiting={waiting}\n                                    setWaiting={setWaiting}\n                                />\n                                {(i < members.length-1) &&\n                                    <Fragment>\n                                        <br />\n                                        <br />\n                                        <hr className=\"sidebar-divider my-0\" />\n                                        <br />\n                                    </Fragment>\n                                }\n                            </Fragment>\n                        )}\n                    </div>\n                </div>\n            </div>\n            {is_leader ? <AddTeamMember\n                user={user}\n                team={team}\n                updateCount={updateCount}\n                setUpdateCount={setUpdateCount}\n                waiting={waiting}\n                setWaiting={setWaiting}\n                teamMembers={teamMembers}\n            /> :\n                <Fragment></Fragment>\n            }\n        </Fragment>\n    )\n}\n\nconst AddTeamMember = ({user, team, updateCount, setUpdateCount, waiting, setWaiting, teamMembers}) => {\n    return (\n        <div className=\"col-xl-6 col-lg-7\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        Add Team Member\n                    </h6>\n                </div>\n\n                <div className=\"card-body\">\n                    <AddMemberToTeam\n                        user={user}\n                        team={team}\n                        updateCount={updateCount}\n                        setUpdateCount={setUpdateCount}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                        teamMembers={teamMembers}\n                    />\n                    <br />\n                    <br />\n                    <AddMemberToTeamEmail\n                        user={user}\n                        team={team}\n                        updateCount={updateCount}\n                        setUpdateCount={setUpdateCount}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                        teamMembers={teamMembers}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nclass AddMemberToTeamEmail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {memberemail:'Email',message:\"\", messageStatus:\"Failure\"};\n    }\n\n    handleChange(event) {\n        this.setState({memberemail: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('https://54.200.109.3:5001/add_member_email',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, team:this.props.team, memberemail: this.state.memberemail})\n        }).then(response=>response.json()).then(data => {\n            if (data.express === \"No such member found.\") {\n                this.setState({message: \"No user with email \"+this.state.memberemail + \" found.\"});\n                this.setState({messageStatus: \"Failure\"});\n            }\n            else {\n                this.setState({message: \"The user with email \" + this.state.memberemail + \" added to the team.\"});\n                this.setState({messageStatus: \"Success\"});\n            }\n            for (let i = 0; i<JSON.parse(this.props.teamMembers).length; i++) {\n                if (this.state.memberemail === JSON.parse(this.props.teamMembers)[i].email) {\n                    this.setState({message: \"The user with email\" + this.state.memberemail + \" is already on the team.\"});\n                    this.setState({messageStatus: \"Failure\"});\n                }\n            }\n            this.props.setUpdateCount(this.props.updateCount+1);\n            this.props.setWaiting(0);\n        })\n    }\n\n    render () {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>Add member to team, by email: </label>\n                <br />\n                <input type=\"text\" defaultValue={this.state.memberemail} onChange={this.handleChange} />\n                <br /><br />\n                <input type=\"submit\" value=\"Add Member\" className=\"btn btn-success\" />\n                {this.state.message.length > 0 ?\n                    <p style={{\"color\":this.state.messageStatus===\"Failure\"?\"#AA0000\":\"#00AA00\"}}>{this.state.message}</p> :\n                    <Fragment />\n                }\n            </form>\n        )\n    }\n}\n\nclass AddMemberToTeam extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {membername:'Name', message:\"\", messageStatus:\"Success\"};\n    }\n\n    handleChange(event) {\n        this.setState({membername: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('https://54.200.109.3:5001/add_member',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, team:this.props.team, membername: this.state.membername})\n        }).then(response=>response.json()).then(data => {\n            if (data.express === \"No such member found.\") {\n                this.setState({message: \"No user \"+this.state.membername + \" found.\"});\n                this.setState({messageStatus: \"Failure\"});\n            }\n            else {\n                this.setState({message: this.state.membername + \" added to the team.\"});\n                this.setState({messageStatus: \"Success\"});\n            }\n            for (let i = 0; i<JSON.parse(this.props.teamMembers).length; i++) {\n                if (this.state.membername === JSON.parse(this.props.teamMembers)[i].name) {\n                    this.setState({message: this.state.membername + \" is already on the team.\"});\n                    this.setState({messageStatus: \"Failure\"});\n                }\n            }\n            this.props.setUpdateCount(this.props.updateCount+1);\n            this.props.setWaiting(0);\n        })\n    }\n\n    render () {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>Add member to team, by name: </label>\n                <br />\n                <input type=\"text\" defaultValue={this.state.membername} onChange={this.handleChange} />\n                <br /><br />\n                <input type=\"submit\" value=\"Add Member\" className=\"btn btn-success\" />\n                {this.state.message.length > 0 ?\n                    <p style={{\"color\":this.state.messageStatus===\"Failure\"?\"#AA0000\":\"#00AA00\"}}>{this.state.message}</p> :\n                    <Fragment />\n                }\n            </form>\n        )\n    }\n}\n\nconst TeamMember = ({member, user, team, updateCount, setUpdateCount, is_leader}) => {\n    return (\n        <Fragment>\n            <b>\n                Name:&nbsp;&nbsp;&nbsp;&nbsp;\n            </b>\n            {member.name}\n            <br />\n            <b>\n                Email:&nbsp;&nbsp;&nbsp;&nbsp;\n            </b>\n            {member.email}\n            <br />\n            {user.email === member.email ?\n                <Fragment><b>Team Leader</b></Fragment> :\n                (is_leader) && <MemberRemoveButton member={member} team={team} updateCount={updateCount} setUpdateCount={setUpdateCount}/>\n            }\n        </Fragment>\n    )\n}\n\nclass MemberRemoveButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        fetch('https://54.200.109.3:5001/remove_member',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({member:this.props.member.id, team: this.props.team})\n        }).then(data => {\n            this.props.setUpdateCount(this.props.updateCount+1);\n        });\n    }\n\n    render () {\n        return (\n            <button onClick={this.handleClick} className=\"btn btn-danger\">\n                Remove From Team\n            </button>\n        )\n    }\n}\n\nexport default TeamMembers;\n","// src/components/Projects.js\n// Component that displays list of projects\n\nimport React from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport TeamMembers from \"./TeamMembers\";\n\nconst Projects = ({team, teams, is_team_leader,\n    project, setProject, projectlead, setProjectlead, teamMembers, setTeamMembers,\n    projects, setProjects, projectsMembership, setProjectsMembership,\n    updateCount, setUpdateCount, view, setView, setTeams, setTeam, waiting, setWaiting}) => {\n    const { user } = useAuth0();\n\n    // Derive projects that one is a member of but not the lead.\n    const lead_ids = JSON.parse(projects) ? JSON.parse(projects).map((x)=>x.id) : [];\n    const projects_not_members = JSON.parse(projectsMembership) ?\n        JSON.parse(projectsMembership).filter((x)=>lead_ids.indexOf(x.id)===-1) :\n        [];\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <TeamMembers\n                    team={team}\n                    teams={teams}\n                    user={user}\n                    teamMembers={teamMembers}\n                    setTeamMembers={setTeamMembers}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            </div>\n            <div className=\"row\">\n                <ProjectsManaged\n                    updateCount={updateCount}\n                    setUpdateCount={setUpdateCount}\n                    user={user}\n                    projects={JSON.parse(projects)}\n                    setProject={setProject}\n                    is_leader={1}\n                    is_team_leader={is_team_leader}\n                    projectlead={projectlead}\n                    setProjectlead={setProjectlead}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n\n                <ProjectsOther\n                    updateCount={updateCount}\n                    setUpdateCount={setUpdateCount}\n                    user={user}\n                    projects={projects_not_members}\n                    setProject={setProject}\n                    is_leader={0}\n                    is_team_leader={is_team_leader}\n                    projectlead={projectlead}\n                    setProjectlead={setProjectlead}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            </div>\n            <div className=\"row\">\n                {(is_team_leader && <NewProjectForm\n                        updateCount={updateCount}\n                        setUpdateCount={setUpdateCount}\n                        user={user}\n                        team={team}\n                        teamMembers={teamMembers}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                />)}\n                {(is_team_leader && <DeleteTeam\n                    user={user}\n                    team={team}\n                    setTeams={setTeams}\n                    setView={setView}\n                    setTeam={setTeam}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />)}\n            </div>\n        </div>\n    );\n}\n\nconst DeleteTeam = ({user, team, setTeams, setView, setTeam, waiting, setWaiting}) => {\n    return (\n        <div className=\"col-xl-6 col-lg-7\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        Delete Team\n                    </h6>\n                </div>\n                <div className=\"card-body\">\n                    <p>Delete this team.</p>\n                    <p>WARNING: you cannot undo this operation.</p>\n                    <br />\n                    <TeamDeleteButton\n                        user={user}\n                        team={team}\n                        setTeams={setTeams}\n                        setTeam={setTeam}\n                        setView={setView}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n// Component for an individual team button\nclass TeamDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('https://54.200.109.3:5001/delete_team',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, team: {id:this.props.team}})\n        }).then(response => response.json())\n        .then(data => {\n            this.props.setWaiting(0);\n            this.props.setTeams(data.express);\n            this.props.setTeam(0);\n            this.props.setView(\"Home\");\n        });\n    }\n\n    render () {\n        return (\n            <button onClick={this.handleClick} className=\"btn btn-danger btn-lg\">\n                Delete\n            </button>\n        )\n    }\n}\n\nconst ProjectsManaged = ({updateCount, setUpdateCount, user, projects, setProject,\n    is_leader, is_team_leader, projectlead, setProjectlead, view, setView, waiting, setWaiting}) => {\n    return (\n        <div className=\"col-xl-6 col-lg-7\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        My Managed Projects\n                    </h6>\n                </div>\n                <div className=\"card-body\">\n                    {projects.length === 0 && <p>You are not leading any projects on this team.</p>}\n                    {projects.length > 0 &&\n                        <ProjectList\n                            updateCount={updateCount}\n                            setUpdateCount={setUpdateCount}\n                            user={user}\n                            projects={projects}\n                            setProject={setProject}\n                            is_leader={1}\n                            is_team_leader={is_team_leader}\n                            projectlead={projectlead}\n                            setProjectlead={setProjectlead}\n                            view={view}\n                            setView={setView}\n                            waiting={waiting}\n                            setWaiting={setWaiting}\n                        />\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst ProjectsOther = ({updateCount, setUpdateCount, user, projects, setProject, is_leader,\n    is_team_leader, projectlead, setProjectlead, view, setView, waiting, setWaiting}) => {\n    return (\n        <div className=\"col-xl-6 col-lg-7\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        Other Projects\n                    </h6>\n                </div>\n                <div className=\"card-body\">\n                    {projects.length === 0 && <p>You are not on any projects on this team.</p>}\n                    {projects.length > 0 &&\n                        <ProjectList\n                            updateCount={updateCount}\n                            setUpdateCount={setUpdateCount}\n                            user={user}\n                            projects={projects}\n                            setProject={setProject}\n                            is_leader={0}\n                            is_team_leader={is_team_leader}\n                            projectlead={projectlead}\n                            setProjectlead={setProjectlead}\n                            view={view}\n                            setView={setView}\n                            waiting={waiting}\n                            setWaiting={setWaiting}\n                        />\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nclass NewProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {projectname:'New Project',projectlead:0};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleLeadChange = this.handleLeadChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({projectname: event.target.value});\n    }\n\n    handleLeadChange(event) {\n        this.setState({projectlead: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        const lead_id = JSON.parse(this.props.teamMembers)[this.state.projectlead].id\n\n        fetch('https://54.200.109.3:5001/new_project',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, lead:lead_id, team:this.props.team, projectname: this.state.projectname})\n        }).then((res) => {\n            this.props.setUpdateCount(this.props.updateCount+1);\n            this.props.setWaiting(0);\n        })\n    }\n\n    render () {\n        if (JSON.parse(this.props.teamMembers).length && !this.state.projectlead) {\n            //this.setState({projectlead: 0});\n        }\n        return (\n            <div className=\"col-xl-6 col-lg-7\">\n                <div className=\"card shadow mb-4\">\n                    <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                        <h6 className=\"m-0 font-weight-bold text-primary\">\n                            Create New Project\n                        </h6>\n                    </div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.handleSubmit}>\n                            <label>Create a new project:</label>\n                            <br />\n                            <input type=\"text\" defaultValue={this.state.projectname} onChange={this.handleChange} />\n                            <br /><br />\n                            Project lead:\n                            <br />\n                            <select onChange={this.handleLeadChange}>\n                                {JSON.parse(this.props.teamMembers).map((x,i) => <option key={i} value={i}>{x.name}</option>)}\n                            </select>\n                            <br /><br />\n                            <input type=\"submit\" value=\"Create Project\" className=\"btn btn-success\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n// Component to render a list of projects\nconst ProjectList = ({updateCount, setUpdateCount, user, projects, setProject,\n    is_leader, is_team_leader, projectlead, setProjectlead, view, setView, waiting, setWaiting}) => {\n    return (\n        <>\n            {projects.map((project)=> {\n                return <ProjectSelector\n                    updateCount={updateCount}\n                    setUpdateCount={setUpdateCount}\n                    user={user}\n                    project={project}\n                    key={project.id}\n                    setProject={setProject}\n                    is_leader={is_leader}\n                    is_team_leader={is_team_leader}\n                    projectlead={projectlead}\n                    setProjectlead={setProjectlead}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            })}\n        </>\n    )\n}\n\nconst ProjectSelector = ({updateCount, setUpdateCount, user, project, setProject,\n    is_leader, is_team_leader, projectlead, setProjectlead, view, setView, waiting, setWaiting}) => {\n    return (\n        <ProjectButton\n            project={project}\n            key={project.id}\n            setProject={setProject}\n            projectlead={projectlead}\n            setProjectlead={setProjectlead}\n            view={view}\n            setView={setView}\n            waiting={waiting}\n            setWaiting={setWaiting}\n        />\n    )\n}\n\n// Component for an individual team button\nconst ProjectButton = ({project, setProject, projectlead, setProjectlead, view, setView, waiting, setWaiting}) => {\n    const handleClick = () => {\n        if (waiting) {return}\n        setProject(project.id)\n        setProjectlead(project.leader);\n        setView(\"Project\");\n    }\n    return (\n        <button\n            onClick={handleClick}\n            className=\"btn btn-primary btn-lg\"\n            style={{\"marginRight\":\"40px\", \"marginBottom\":\"40px\"}}\n        >\n            {project.name}\n        </button>\n    )\n}\n\nexport default Projects;\n","// src/components/Issues.js\n// Component that displays list of issues for a given project\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst Issues = ({project, projectlead, teamMembers, projectsMembership,\n    updateCountProject, setUpdateCountProject, setProject, setView, is_team_leader, waiting, setWaiting}) => {\n    const { user } = useAuth0();\n    const [issues, setIssues] = useState(0);\n    const [userID, setUserID] = useState(0);\n    const [updateCount, setUpdateCount] = useState(0);\n\n    useEffect(()=> {\n        setWaiting(1);\n        async function getIssues() {\n            const response = await fetch('https://54.200.109.3:5001/issues',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify({user:user, project:project})\n            });\n            const my_issues = await response.json();\n            setIssues(my_issues.express);\n            setWaiting(0);\n        }\n        getIssues();\n    },[user, project, updateCount, setWaiting])\n\n    useEffect(() => {\n        setWaiting(1);\n        async function getUserID() {\n            const response = await fetch('https://54.200.109.3:5001/get_id',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify({email:user.email})\n            });\n            const myID = await response.json();\n            if (JSON.parse(myID.express).length > 0) {\n                setUserID(JSON.parse(myID.express)[0].id);\n            }\n            setWaiting(0);\n        }\n        getUserID();\n    },[user, setWaiting])\n\n    const issues_array = issues ? JSON.parse(issues) : [];\n\n    // Sort team members by ID\n    let members_by_id = {}\n    for (let i=0; i<JSON.parse(teamMembers).length; i++) {\n        members_by_id[JSON.parse(teamMembers)[i].id] = JSON.parse(teamMembers)[i]\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <IssueList\n                    list_name={\"My Open Issues\"}\n                    issues_array={issues_array}\n                    userID={userID}\n                    user={user}\n                    members_by_id={members_by_id}\n                    projectlead={projectlead}\n                    updateCount={updateCount}\n                    setUpdateCount={setUpdateCount}\n                    by_owner={true}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n                <IssueList\n                    list_name={\"Other Open Issues\"}\n                    issues_array={issues_array}\n                    userID={userID}\n                    user={user}\n                    members_by_id={members_by_id}\n                    projectlead={projectlead}\n                    updateCount={updateCount}\n                    setUpdateCount={setUpdateCount}\n                    by_owner={false}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            </div>\n            <div className=\"row\">\n                {userID === projectlead ?\n                    <NewIssueForm\n                        user={userID}\n                        project={project}\n                        teamMembers={teamMembers}\n                        updateCount={updateCount}\n                        setUpdateCount={setUpdateCount}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                    /> :\n                    <Fragment></Fragment>\n                }\n                {is_team_leader ?\n                    <DeleteProject\n                        updateCountProject={updateCountProject}\n                        setUpdateCountProject={setUpdateCountProject}\n                        user={user}\n                        project={project}\n                        setProject={setProject}\n                        setView={setView}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                    /> :\n                    <Fragment></Fragment>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst DeleteProject = ({updateCountProject, setUpdateCountProject, user, project, setProject, setView,\n    waiting, setWaiting}) => {\n    return (\n        <div className=\"col-xl-6 col-lg-5\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        Delete Project\n                    </h6>\n                </div>\n                <div className=\"card-body\">\n                    <p>Delete this project.</p>\n                    <p>WARNING: this operation cannot be undone.</p>\n                    <ProjectDeleteButton\n                        updateCountProject={updateCountProject}\n                        setUpdateCountProject={setUpdateCountProject}\n                        user={user}\n                        project={project}\n                        setProject={setProject}\n                        setView={setView}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n// Component for an individual team button\nclass ProjectDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('https://54.200.109.3:5001/delete_project',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, project: {id:this.props.project}})\n        }).then(response => response.json())\n        .then(data => {\n            this.props.setWaiting(0);\n            this.props.setUpdateCountProject(this.props.updateCountProject+1)\n            this.props.setProject(0);\n            this.props.setView(\"Team\");\n        });\n    }\n\n    render () {\n        return (\n            <button onClick={this.handleClick} className=\"btn btn-danger btn-lg\">\n                Delete\n            </button>\n        )\n    }\n}\n\nconst IssueList = ({list_name, issues_array, userID, user, members_by_id,\n        projectlead, updateCount, setUpdateCount, by_owner, waiting, setWaiting}) => {\n    let filtered_issues = issues_array.filter((issue) => (by_owner ? (issue.owner === userID):(issue.owner !== userID)))\n\n    return (\n        <div className=\"col-xl-6 col-lg-5\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        {list_name}\n                    </h6>\n                </div>\n                <div className=\"card-body\">\n                    {filtered_issues.map((issue,i)=>\n                        <Fragment key={issue.id}>\n                            <Issue\n                                    key={issue.id}\n                                    issue={issue}\n                                    userID={userID}\n                                    user={user}\n                                    members_by_id={members_by_id}\n                                    projectlead={projectlead}\n                                    updateCount={updateCount}\n                                    setUpdateCount={setUpdateCount}\n                                    waiting={waiting}\n                                    setWaiting={setWaiting}\n                            />\n                            {(i<filtered_issues.length-1) ?\n                                <Fragment>\n                                    <hr className=\"sidebar-divider my-0\"/>\n                                    <br />\n                                </Fragment> :\n                                <Fragment></Fragment>\n                            }\n                        </Fragment>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nclass Issue extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('https://54.200.109.3:5001/close_issue',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, issue: this.props.issue.id})\n        }).then((res) => {\n            this.props.setWaiting(0);\n            this.props.setUpdateCount(this.props.updateCount+1)\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{\"float\":\"left\"}}>\n                    {this.props.issue.owner !== this.props.userID &&\n                        <p>\n                            <b>Owner: {this.props.members_by_id[this.props.issue.owner].name}</b>\n                        </p>\n                    }\n                    <p>{this.props.issue.description}</p>\n                </div>\n                <div style={{\"float\":\"right\"}}>\n                    {this.props.issue.owner === this.props.userID &&\n                        <Fragment>\n                            <button onClick={this.handleClick} className=\"btn btn-primary\">\n                                Done\n                            </button>\n                            <br /><br />\n                        </Fragment>\n                    }\n                    {this.props.userID === this.props.projectlead &&\n                        <Fragment>\n                            <button onClick={this.handleClick} className=\"btn btn-warning\">\n                                Close\n                            </button>\n                            <br /><br />\n                        </Fragment>\n                    }\n                </div>\n                <div style={{\"clear\":\"both\"}} />\n            </div>\n        )\n    }\n}\n\nclass NewIssueForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {issuedesc:'New Issue',owner:0};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleOwnerChange = this.handleOwnerChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({issuedesc: event.target.value});\n    }\n\n    handleOwnerChange(event) {\n        const owner_id = JSON.parse(this.props.teamMembers)[event.target.value].id\n        this.setState({owner: owner_id});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('https://54.200.109.3:5001/new_issue',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, lead:this.state.owner, project:this.props.project, issuedesc: this.state.issuedesc})\n        }).then((res) => {\n            this.props.setUpdateCount(this.props.updateCount+1);\n            this.props.setWaiting(0);\n        })\n    }\n\n    render () {\n        if (JSON.parse(this.props.teamMembers).length && !this.state.owner) {\n            this.setState({owner: JSON.parse(this.props.teamMembers)[0].id});\n        }\n        return (\n            <div className=\"col-xl-6 col-lg-5\">\n                <div className=\"card shadow mb-4\">\n                    <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                        <h6 className=\"m-0 font-weight-bold text-primary\">\n                            New Issue\n                        </h6>\n                    </div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.handleSubmit}>\n                            <p><label>Open a new issue:</label></p>\n                            <input type=\"text\" defaultValue={this.state.issuedesc} onChange={this.handleChange} />\n                            <br />\n                            <p>Owner:</p>\n                            <select onChange={this.handleOwnerChange}>\n                                {JSON.parse(this.props.teamMembers).map((x,i) => <option key={i} value={i}>{x.name}</option>)}\n                            </select>\n                            <br /><br />\n                            <input type=\"submit\" value=\"Open Issue\" className=\"btn btn-success\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Issues;\n","// src/components/NavBar.js\n\nimport React, {useState} from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst NavBar = ({user, view, setView, team, teamsMembership, project, projectsMembership,\n    waiting, setWaiting}) => {\n    const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n    const [isExpanded, setIsExpanded] = useState(false)\n\n    // Get current team name\n    let team_name = (team && teamsMembership) ? JSON.parse(teamsMembership).filter((x)=>x.id===team)[0].name : \"\";\n\n    // Current project name\n    let project_name = \"\";\n    if (project && projectsMembership) {\n        let filtered = JSON.parse(projectsMembership).filter((x)=>x.id===project);\n        if (filtered.length) {\n            project_name = JSON.parse(projectsMembership).filter((x)=>x.id===project)[0].name\n        }\n    }\n\n    return (\n        <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n            {!isAuthenticated && (\n                <button onClick={() => loginWithRedirect({})} className=\"btn btn-primary\">Log in</button>\n            )}\n\n            {/* NEW - add a link to the home and profile pages */}\n            {isAuthenticated && (\n                <ul className=\"navbar-nav ml-auto\">\n\n                    {view === \"Home\" ?\n                        <b>Home</b> :\n                        <a href=\"# \" onClick={()=>(!waiting && setView(\"Home\"))}>Home</a>\n                    }\n\n                    <div className=\"topbar-divider d-none d-sm-block\" />\n\n                    {view === \"Team\" ?\n                        <b>Team: {team_name?team_name:\"No team selected\"}</b> :\n                        team_name ?\n                            <a href=\"# \" onClick={()=>(!waiting && setView(\"Team\"))}>Team: {team_name}</a> :\n                            <i>Team: No team selected</i>\n                    }\n\n                    <div className=\"topbar-divider d-none d-sm-block\" />\n\n                    {view === \"Project\" ?\n                        <b>Team: {project_name?project_name:\"No project selected\"}</b> :\n                        project_name ?\n                            <a href=\"# \" onClick={()=>(!waiting && setView(\"Project\"))}>Project: {project_name}</a> :\n                            <i>Project: No project selected</i>\n                    }\n                </ul>\n            )}\n            <ul className=\"navbar-nav ml-auto\">\n\n                {(isAuthenticated && user) &&\n                    <li className=\"nav-item dropdown no-arrow\">\n                        <a\n                                className=\"nav-link dropdown-toggle\"\n                                href=\"# \" id=\"userDropdown\"\n                                role=\"button\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                aria-expanded={isExpanded}\n                                onClick={\n                                    ()=>{\n                                        setIsExpanded(!isExpanded)\n                                    }\n                                }\n                        >\n                            <div>\n                                <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">\n                                    {user.name}\n                                </span>\n                                <img className=\"img-profile rounded-circle\" src={user.picture} alt=\"Profile\"  />\n                            </div>\n                        </a>\n                        <div className={\"dropdown-menu dropdown-menu-right shadow animated--grow-in\"+ (isExpanded?\" show\":\"\")} aria-labelledby=\"userDropdown\">\n                            <a className=\"dropdown-item\" href=\"# \" data-toggle=\"modal\" data-target=\"#logoutModal\" onClick={() => logout()}>\n                                <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\n                                Logout\n                            </a>\n                        </div>\n                    </li>\n                }\n            </ul>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","// src/components/HomeView.js\n// The main panel for the home screen\n\nimport React from \"react\";\n\nconst HomeView = ({user, teams, setTeams, waiting, setWaiting}) => {\n    if (!user) {\n        return (\n            <p>Not logged in.</p>\n        )\n    }\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-xl-6 col-lg-7\">\n                    <div className=\"card shadow mb-4\">\n                        <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                            <h6 className=\"m-0 font-weight-bold text-primary\">\n                                About Me\n                            </h6>\n                        </div>\n                        <div className=\"card-body\">\n                            <p><b>Name: </b>{user.name}</p>\n                            <p><b>Email: </b>{user.email}</p>\n                            <img src={user.picture} alt=\"Profile\" style={{\"height\":\"100px\"}} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-xl-6 col-lg-7\">\n                    <NewTeamForm user={user} setTeams={setTeams} waiting={waiting} setWaiting={setWaiting}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nclass NewTeamForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {teamname:'New Team'};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({teamname: event.target.value});\n    }\n\n    handleSubmit(event) {\n        //alert('A name was submitted: ' + this.state.value);\n        event.preventDefault();\n\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('https://54.200.109.3:5001/new_team',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, teamname: this.state.teamname})\n        }).then(response => response.json())\n        .then(data=>{\n            this.props.setWaiting(0);\n            this.props.setTeams(data.express)\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        New Team\n                    </h6>\n                </div>\n                <div className=\"card-body\">\n                    <form onSubmit={this.handleSubmit}>\n                        <p><label>Create a new team:</label></p>\n                        <input type=\"text\" defaultValue={this.state.teamname} onChange={this.handleChange} />\n                        <br />\n                        <br />\n                        <input className=\"btn btn-success btn-lg\" type=\"submit\" value=\"Create Team\" />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HomeView;\n","// src/components/Dashboard.js\n// Main dashboard component.\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport Teams from \"./Teams\";\nimport Projects from \"./Projects\";\nimport Issues from \"./Issues\";\nimport NavBar from \"./NavBar\";\nimport HomeView from \"./HomeView\"\n\nconst Dashboard = () => {\n    const { loading, user } = useAuth0();\n    const [teams, setTeams] = useState(0);\n    const [teamsMembership, setTeamsMembership] = useState(0);\n    const [team, setTeam] = useState(0); // The currently selected team, by id.\n    const [view, setView] = useState(\"Home\") // Which is the main pages is being viewed\n    const [project, setProject] = useState(0); // The currently selected project, by id.\n    const [projectlead, setProjectlead] = useState(0); // Leader of the currently selected project.\n    const [teamMembers, setTeamMembers] = useState(\"[]\");\n    const [projects, setProjects] = useState(0);\n    const [projectsMembership, setProjectsMembership] = useState(0);\n    const [updateCount, setUpdateCount] = useState(0);\n    const [waiting, setWaiting] = useState(0); // 1 if we are waiting for the server to return results, 0 otherwise\n\n    useEffect(()=> {\n        async function getTeams() {\n            if (!user) {return}\n            const response = await fetch('https://54.200.109.3:5001/teams',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify(user)\n            });\n            const my_teams = await response.json();\n\n            const response_by_membership = await fetch('https://54.200.109.3:5001/teams_by_membership',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify(user)\n            });\n            const my_teams_by_membership = await response_by_membership.json();\n\n            setTeams(my_teams.express);\n            setTeamsMembership(my_teams_by_membership.express);\n            setTeam(0); // If user changes, team should be disabled\n        }\n        getTeams();\n    },[user, teams]); // Second parameter is a list of state variables, upon which changing should prompt calling the effect.\n    // With the second parameter the empty array, the effect only runs when the component mounts.\n\n    useEffect(()=> {\n        async function getProjects() {\n            if (!user) {return}\n            const response = await fetch('https://54.200.109.3:5001/projects',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify({user:user, team:team})\n            });\n            const my_projects = await response.json();\n\n            const response_by_membership = await fetch('https://54.200.109.3:5001/projects_by_membership',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify({user:user, team:team})\n            });\n            const my_projects_by_membership = await response_by_membership.json();\n\n            setProjects(my_projects.express);\n            setProjectsMembership(my_projects_by_membership.express);\n            setProject(0); // If user or team changes, project should be disabled\n            setProjectlead(0);\n        }\n        getProjects();\n    },[user, team, updateCount]);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (!user) {\n        return (\n            <div id=\"wrapper\">\n                <Sidebar\n                    teams={teams}\n                    setTeams={setTeams}\n                    teamsMembership={teamsMembership}\n                    setTeamsMembership={setTeamsMembership}\n                    team={team}\n                    setTeam={setTeam}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n                    <div id=\"content\">\n                        <NavBar\n                            view={view}\n                            setView={setView}\n                            team={team}\n                            teamsMembership={teamsMembership}\n                            waiting={waiting}\n                            setWaiting={setWaiting}\n                        />\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-xl-6 col-lg-7\">\n                                    <p>Welcome to the Bug Tracker. Log in to get started.</p>\n                                    <p>For more instructions or information on the project, see the <a href=\"https://github.com/michael-k-goff/bug-tracker\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a> repo.</p>\n                                    <p>For more about the developer, see my <a href=\"https://github.com/michael-k-goff\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a> and <a href=\"https://michael-k-goff.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">portfolio</a> pages.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <footer className=\"sticky-footer bg-white\">\n                        <div className=\"container my-auto\">\n                            <div className=\"copyright text-center my-auto\">\n                                <span>Copyright &copy; Michael Goff 2020</span>\n                            </div>\n                        </div>\n                    </footer>\n                </div>\n            </div>\n        );\n    }\n\n    // Derive teams that one is a member of but not the lead.\n    const lead_ids = JSON.parse(teams) ? JSON.parse(teams).map((x)=>x.id) : [];\n    const is_team_leader = lead_ids.indexOf(team) >= 0; // Leader of currently selected team\n\n    return (\n        <div id=\"wrapper\">\n            <Sidebar\n                teams={teams}\n                setTeams={setTeams}\n                teamsMembership={teamsMembership}\n                setTeamsMembership={setTeamsMembership}\n                team={team}\n                setTeam={setTeam}\n                view={view}\n                setView={setView}\n                waiting={waiting}\n                setWaiting={setWaiting}\n            />\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n                <div id=\"content\">\n                    <NavBar\n                        user={user}\n                        view={view}\n                        setView={setView}\n                        team={team}\n                        teamsMembership={teamsMembership}\n                        project={project}\n                        projectsMembership={projectsMembership}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                    />\n                    {view===\"Home\" && <HomeView\n                        user={user}\n                        teams={teams}\n                        setTeams={setTeams}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                    />}\n                    {(team && view === \"Team\") ?\n                        <Projects\n                            team={team}\n                            teams={teams}\n                            is_team_leader={is_team_leader}\n                            view={view}\n                            project={project}\n                            setProject={setProject}\n                            projectlead={projectlead}\n                            setProjectlead={setProjectlead}\n                            teamMembers={teamMembers}\n                            setTeamMembers={setTeamMembers}\n                            projects={projects}\n                            setProjects={setProjects}\n                            projectsMembership={projectsMembership}\n                            setProjectsMembership={setProjectsMembership}\n                            updateCount={updateCount}\n                            setUpdateCount={setUpdateCount}\n                            setView={setView}\n                            setTeams={setTeams}\n                            setTeam={setTeam}\n                            waiting={waiting}\n                            setWaiting={setWaiting}\n                        />\n                        :\n                        <Fragment></Fragment>\n                    }\n                    {(team && project && view === \"Project\") ?\n                        <Issues\n                            project={project}\n                            projectlead={projectlead}\n                            teamMembers={teamMembers}\n                            projectsMembership={projectsMembership}\n                            updateCountProject={updateCount}\n                            setUpdateCountProject={setUpdateCount}\n                            setProject={setProject}\n                            setView={setView}\n                            is_team_leader={is_team_leader}\n                            waiting={waiting}\n                            setWaiting={setWaiting}\n                        /> :\n                        (view === \"Project\" && <p>No issues</p>)\n                    }\n                </div>\n                <footer className=\"sticky-footer bg-white\">\n                    <div className=\"container my-auto\">\n                        <div className=\"copyright text-center my-auto\">\n                            <span>Copyright &copy; Michael Goff 2020</span>\n                        </div>\n                    </div>\n                </footer>\n            </div>\n        </div>\n    )\n}\n\nconst Sidebar = ({teams, setTeams, teamsMembership, setTeamsMembership, team, setTeam, view, setView}) => {\n    return (\n        <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n            <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"# \">\n                <div className=\"sidebar-brand-text mx-3\">\n                    Bug Tracker\n                </div>\n            </a>\n            <hr className=\"sidebar-divider my-0\" />\n            <Teams\n                teams={teams}\n                setTeams={setTeams}\n                teamsMembership={teamsMembership}\n                setTeamsMembership={setTeamsMembership}\n                team={team}\n                setTeam={setTeam}\n                view={view}\n                setView={setView}\n            />\n            <hr className=\"sidebar-divider my-0\" />\n            <div className=\"sidebar-heading\">\n                <b>About</b>\n            </div>\n            <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"https://github.com/michael-k-goff/bug-tracker\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <span>This project on GitHub</span>\n                </a>\n            </li>\n            <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"https://github.com/michael-k-goff\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <span>Michael's GitHub page</span>\n                </a>\n            </li>\n            <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"https://michael-k-goff.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <span>Michael's software portfolio</span>\n                </a>\n            </li>\n        </ul>\n    )\n}\n\nexport default Dashboard;\n","// src/utils/history.js\n\nimport { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","// src/components/PrivateRoute.js\n\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n    const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n    useEffect(() => {\n        if (loading || isAuthenticated) {\n            return;\n        }\n        const fn = async () => {\n            await loginWithRedirect({\n                appState: { targetUrl: path }\n            });\n        };\n        fn();\n    }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n    const render = props =>\n        isAuthenticated === true ? <Component {...props} /> : null;\n\n    return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;\n","import React, {Component} from 'react';\n\n// New - import the React Router components, and the Profile page component\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Profile from \"./components/Profile\";\nimport Dashboard from \"./components/Dashboard\";\nimport history from \"./utils/history\";\n\n// NEW - import the PrivateRoute component\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport './startbootstrap-sb-admin-2-gh-pages/css/sb-admin-2.min.css';\n\nclass App extends Component {\n    state = {\n        response: '',\n        post: '',\n        responseToPost: '',\n    };\n\n    componentDidMount() {\n        this.callApi()\n            .then(res => this.setState({ response: res.express }))\n            .catch(err => console.log(err));\n    }\n\n    callApi = async () => {\n        const response = await fetch('https://54.200.109.3:5001/users');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n\n        return body;\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                {/* Don't forget to include the history module */}\n                <Router history={history}>\n                    <Switch>\n                        <PrivateRoute path=\"/profile\" component={Profile} />\n                        <Route path=\"/\" component={Dashboard} />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// src/index.js\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin+\"/bt-frontend\"}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}